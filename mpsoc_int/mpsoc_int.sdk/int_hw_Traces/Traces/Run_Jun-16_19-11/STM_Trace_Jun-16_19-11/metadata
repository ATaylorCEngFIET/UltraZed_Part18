/* CTF */
typealias integer {
    size = 32;
} := uint32_t;
trace {
    major = 1;
    minor = 8;
    byte_order = be;
};
env {
	domain = "stm";
};
clock {
    name = my_clock;
    freq = 1000000000;
    offset = 1497567600000000000;
};
typealias integer {
    size = 64;
    map = clock.my_clock.value;
} := my_clock_int_t;

stream {
    event.header := struct {
		uint32_t id;
        my_clock_int_t timestamp;
    };
};
event {
    id = 0;
    name = "Data";
    fields := struct {
		string master;
		string channel;
		string stm_code;
		string value;
     };
};

event {
    id = 1;
    name = "Flag";
    fields := struct {
    	string master;
		string channel;
		string stm_code;
     };
};
event {
    id = 2;
    name = "Trigger";
    fields := struct {
        string master;
		string channel;
		string stm_code;
		string value;
     };
};
event {
    id = 3;
    name = "Master Error";
    fields := struct {
        string master;
		string channel;
		string stm_code;
     };
};
event {
    id = 4;
    name = "Global Error";
    fields := struct {
        string master;
		string channel;
		string stm_code;
     };
};


